{"ast":null,"code":"// UserService \n\nimport axios from 'axios';\nconst BASE_URL = 'http://localhost:2000';\nconst UserService = {\n  registerUser: userData => {\n    return axios.post(`${BASE_URL}/register`, userData).then(response => response.data).catch(error => {\n      console.log(error);\n      throw new Error(error);\n    });\n  },\n  loginUser: credentials => {\n    return axios.post(`${BASE_URL}/login`, credentials).then(response => response.data).catch(error => {\n      console.log(error);\n      throw new Error(error);\n    });\n  },\n  updateUserProfile: async (updatedData, token) => {\n    console.log(updatedData);\n    try {\n      const response = await axios.put(`${BASE_URL}/users/${updatedData._id}`, updatedData, {\n        headers: {\n          authorization: `Bearer ${token}`\n        }\n      });\n      return response.data;\n    } catch (error) {\n      console.log(error);\n      throw new Error(error);\n    }\n  }\n};\nexport default UserService;\n\n// // UserService \n\n// import axios from 'axios';\n\n// const BASE_URL = 'http://localhost:2000';\n\n// const UserService = {\n//     registerUser: async (userData) => {\n//         try {\n//             const response = await axios.post(`${BASE_URL}/register`, userData);\n//             return response.data;\n//         } catch (error) {\n//             console.log(error);\n//             //return error;\n//             throw new Error(error);\n//         }\n//     },\n\n//     loginUser: async (credentials) => {\n//         try {\n//             const response = await axios.post(`${BASE_URL}/login`, credentials);\n//             console.log(response);\n//             return response.data;\n//         } catch (error) {\n//             console.log(error);\n//             throw new Error(error);\n//         }\n//     },\n\n//     updateUserProfile: async (updatedData, token) => {\n//         console.log(updatedData);\n//         try {\n//             const response = await axios.put(`${BASE_URL}/users/${updatedData._id}`, updatedData, {\n//                 headers: { authorization: `Bearer ${token}` }\n//             });\n//             console.log(response.data);\n//             return response.data;\n//         } catch (error) {\n//             console.log(error);\n//             return error;\n//         }\n//     }\n// };\n\n// export default UserService;","map":{"version":3,"names":["axios","BASE_URL","UserService","registerUser","userData","post","then","response","data","catch","error","console","log","Error","loginUser","credentials","updateUserProfile","updatedData","token","put","_id","headers","authorization"],"sources":["C:/Sakala/ibm-final-demos-may-2024/03-ibm-frontend-react/src/services/UserService.js"],"sourcesContent":["// UserService \r\n\r\nimport axios from 'axios';\r\n\r\nconst BASE_URL = 'http://localhost:2000';\r\n\r\nconst UserService = {\r\n    registerUser: (userData) => {\r\n        return axios.post(`${BASE_URL}/register`, userData)\r\n            .then(response => response.data)\r\n            .catch(error => {\r\n                console.log(error);\r\n                throw new Error(error);\r\n            });\r\n    },\r\n\r\n    loginUser: (credentials) => {\r\n        return axios.post(`${BASE_URL}/login`, credentials)\r\n            .then(response => response.data)\r\n            .catch(error => {\r\n                console.log(error);\r\n                throw new Error(error);\r\n            });\r\n    },\r\n\r\n    updateUserProfile: async (updatedData, token) => {\r\n        console.log(updatedData);\r\n        try {\r\n            const response = await axios.put(`${BASE_URL}/users/${updatedData._id}`, updatedData, {\r\n                headers: { authorization: `Bearer ${token}` }\r\n            });\r\n            return response.data;\r\n        } catch (error) {\r\n            console.log(error);\r\n            throw new Error(error);\r\n        }\r\n    }\r\n};\r\n\r\nexport default UserService;\r\n\r\n// // UserService \r\n\r\n// import axios from 'axios';\r\n\r\n// const BASE_URL = 'http://localhost:2000';\r\n\r\n// const UserService = {\r\n//     registerUser: async (userData) => {\r\n//         try {\r\n//             const response = await axios.post(`${BASE_URL}/register`, userData);\r\n//             return response.data;\r\n//         } catch (error) {\r\n//             console.log(error);\r\n//             //return error;\r\n//             throw new Error(error);\r\n//         }\r\n//     },\r\n\r\n//     loginUser: async (credentials) => {\r\n//         try {\r\n//             const response = await axios.post(`${BASE_URL}/login`, credentials);\r\n//             console.log(response);\r\n//             return response.data;\r\n//         } catch (error) {\r\n//             console.log(error);\r\n//             throw new Error(error);\r\n//         }\r\n//     },\r\n\r\n//     updateUserProfile: async (updatedData, token) => {\r\n//         console.log(updatedData);\r\n//         try {\r\n//             const response = await axios.put(`${BASE_URL}/users/${updatedData._id}`, updatedData, {\r\n//                 headers: { authorization: `Bearer ${token}` }\r\n//             });\r\n//             console.log(response.data);\r\n//             return response.data;\r\n//         } catch (error) {\r\n//             console.log(error);\r\n//             return error;\r\n//         }\r\n//     }\r\n// };\r\n\r\n// export default UserService;\r\n"],"mappings":"AAAA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,QAAQ,GAAG,uBAAuB;AAExC,MAAMC,WAAW,GAAG;EAChBC,YAAY,EAAGC,QAAQ,IAAK;IACxB,OAAOJ,KAAK,CAACK,IAAI,CAAE,GAAEJ,QAAS,WAAU,EAAEG,QAAQ,CAAC,CAC9CE,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAC/BC,KAAK,CAACC,KAAK,IAAI;MACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MAClB,MAAM,IAAIG,KAAK,CAACH,KAAK,CAAC;IAC1B,CAAC,CAAC;EACV,CAAC;EAEDI,SAAS,EAAGC,WAAW,IAAK;IACxB,OAAOf,KAAK,CAACK,IAAI,CAAE,GAAEJ,QAAS,QAAO,EAAEc,WAAW,CAAC,CAC9CT,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAC/BC,KAAK,CAACC,KAAK,IAAI;MACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MAClB,MAAM,IAAIG,KAAK,CAACH,KAAK,CAAC;IAC1B,CAAC,CAAC;EACV,CAAC;EAEDM,iBAAiB,EAAE,MAAAA,CAAOC,WAAW,EAAEC,KAAK,KAAK;IAC7CP,OAAO,CAACC,GAAG,CAACK,WAAW,CAAC;IACxB,IAAI;MACA,MAAMV,QAAQ,GAAG,MAAMP,KAAK,CAACmB,GAAG,CAAE,GAAElB,QAAS,UAASgB,WAAW,CAACG,GAAI,EAAC,EAAEH,WAAW,EAAE;QAClFI,OAAO,EAAE;UAAEC,aAAa,EAAG,UAASJ,KAAM;QAAE;MAChD,CAAC,CAAC;MACF,OAAOX,QAAQ,CAACC,IAAI;IACxB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MAClB,MAAM,IAAIG,KAAK,CAACH,KAAK,CAAC;IAC1B;EACJ;AACJ,CAAC;AAED,eAAeR,WAAW;;AAE1B;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}