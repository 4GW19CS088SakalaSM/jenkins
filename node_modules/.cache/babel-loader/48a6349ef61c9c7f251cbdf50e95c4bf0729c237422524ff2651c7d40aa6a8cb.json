{"ast":null,"code":"var _jsxFileName = \"C:\\\\Sakala\\\\ibm-final-demos-may-2024\\\\03-ibm-frontend-react\\\\src\\\\components\\\\user\\\\Register.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport UserService from \"../../services/UserService\";\nimport { useDispatch } from \"react-redux\";\nimport { userRegister } from \"../../redux/UserSlice\";\n// import { checkUserExists } from '../../../services/user.service'; \nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const [registerData, setRegisterData] = useState({\n    username: '',\n    password: ''\n  });\n  const [afterRegisterMessage, setAfterRegisterMessage] = useState('');\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const handleChange = evt => {\n    console.log(evt.target.name);\n    console.log(evt.target.value);\n    setRegisterData({\n      ...registerData,\n      [evt.target.name]: evt.target.value\n    });\n  };\n  const handleRegisterSubmit = async evt => {\n    evt.preventDefault();\n    console.log(registerData);\n    UserService.registerUser(registerData).then(response => {\n      console.log(response);\n      dispatch(userRegister(response));\n      setRegisterData({\n        username: '',\n        password: ''\n      });\n      setAfterRegisterMessage(`Hi ${response.username}! You've registered successfully!`);\n      setTimeout(() => {\n        navigate('/login');\n      }, 2000);\n    }).catch(error => {\n      console.log(error);\n      setAfterRegisterMessage(`Registration failed! user already exists.`);\n\n      //setAfterRegisterMessage(`Invalid credentials!`);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"display-4\",\n      children: \"Register Component\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"lead\",\n      children: \"Register here\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form form-group mx-2 py-2 my-2 py-2\",\n        onSubmit: handleRegisterSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control\",\n          type: \"text\",\n          name: \"username\",\n          value: registerData.username,\n          placeholder: \"username\",\n          onChange: handleChange,\n          autoFocus: true,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control\",\n          type: \"password\",\n          name: \"password\",\n          value: registerData.password,\n          placeholder: \"password\",\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          value: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [afterRegisterMessage && afterRegisterMessage, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this)\n      }, void 0, false), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Already registered? \", /*#__PURE__*/_jsxDEV(Link, {\n          to: '/login',\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 36\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n_s(Register, \"Y+1pSLZ2iUQa/YOaEZ2pHKt5hoI=\", false, function () {\n  return [useNavigate, useDispatch];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["useState","Link","useNavigate","UserService","useDispatch","userRegister","jsxDEV","_jsxDEV","Fragment","_Fragment","Register","_s","registerData","setRegisterData","username","password","afterRegisterMessage","setAfterRegisterMessage","navigate","dispatch","handleChange","evt","console","log","target","name","value","handleRegisterSubmit","preventDefault","registerUser","then","response","setTimeout","catch","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","autoFocus","required","to","_c","$RefreshReg$"],"sources":["C:/Sakala/ibm-final-demos-may-2024/03-ibm-frontend-react/src/components/user/Register.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport UserService from \"../../services/UserService\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { userRegister } from \"../../redux/UserSlice\";\r\n// import { checkUserExists } from '../../../services/user.service'; \r\n\r\nconst Register = () => {\r\n\r\n    const [registerData, setRegisterData] = useState({ username: '', password: '' });\r\n    const [afterRegisterMessage, setAfterRegisterMessage] = useState('');\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n\r\n    const handleChange = (evt) => {\r\n        console.log(evt.target.name);\r\n        console.log(evt.target.value);\r\n        setRegisterData({\r\n            ...registerData,\r\n            [evt.target.name]: evt.target.value\r\n        });\r\n    };\r\n\r\n   \r\n\r\n    const handleRegisterSubmit = async (evt) => {\r\n        evt.preventDefault();\r\n        console.log(registerData);\r\n       \r\n        UserService.registerUser(registerData)\r\n            .then((response) => {\r\n                console.log(response);\r\n                dispatch(userRegister(response));\r\n                setRegisterData({ username: '', password: '' });\r\n                setAfterRegisterMessage(`Hi ${response.username}! You've registered successfully!`);\r\n                setTimeout(() => {\r\n                    navigate('/login');\r\n                }, 2000);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n                \r\n                    setAfterRegisterMessage(`Registration failed! user already exists.`);\r\n                \r\n                //setAfterRegisterMessage(`Invalid credentials!`);\r\n            });\r\n    \r\n\r\n    };\r\n\r\n    return (\r\n        <div className=\"container mt-3\">\r\n            <h1 className=\"display-4\">Register Component</h1>\r\n            <p className=\"lead\">Register here</p>\r\n            <div className=\"col-4\">\r\n            <form className=\"form form-group mx-2 py-2 my-2 py-2\" onSubmit={handleRegisterSubmit}>\r\n                <input className=\"form-control\" type=\"text\" name=\"username\" value={registerData.username} placeholder=\"username\"\r\n                    onChange={handleChange} autoFocus required />\r\n                <br />\r\n                <input className=\"form-control\" type=\"password\" name=\"password\" value={registerData.password} placeholder=\"password\"\r\n                    onChange={handleChange} required />\r\n                <br />\r\n                <input  type=\"submit\" className=\"btn btn-primary\" value=\"Register\" />\r\n            </form>\r\n            <>\r\n                <p>{afterRegisterMessage && afterRegisterMessage} </p>\r\n            </>\r\n            <p>Already registered? <Link to={'/login'}>Login</Link> </p>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\nexport default Register;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}