{"ast":null,"code":"import axios from \"axios\";\nconst BASE_URL = \"http://localhost:9090/emp/\";\nconst EmpService = {\n  addEmployee: empData => {\n    return axios.post(`${BASE_URL}/add-emp`, empData).then(response => response.data).catch(error => {\n      console.log(error);\n      throw new Error(error);\n    });\n  },\n  getEmployee: async () => {\n    try {\n      const response = await axios.get(`${BASE_URL}get-all-emps`);\n      return response.data;\n    } catch (error) {\n      console.log(error);\n      throw new Error(error);\n    }\n  },\n  getEmpById: async empById => {\n    try {\n      const response = await axios.get(`${BASE_URL}get-emp-by-id/${empById}`);\n      return response.data;\n    } catch (error) {\n      console.log(error);\n      throw new Error(error);\n    }\n  },\n  getEmpByName: async empNameToFind => {\n    try {\n      const response = await axios.get(`${BASE_URL}get-emp-by-name/${empNameToFind}`);\n      return response.data;\n    } catch (error) {\n      console.log(error);\n      throw new Error(error);\n    }\n  }\n};\nexport default EmpService;","map":{"version":3,"names":["axios","BASE_URL","EmpService","addEmployee","empData","post","then","response","data","catch","error","console","log","Error","getEmployee","get","getEmpById","empById","getEmpByName","empNameToFind"],"sources":["C:/Sakala/ibm-final-demos-may-2024/03-ibm-frontend-react/src/services/EmpService.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst BASE_URL=\"http://localhost:9090/emp/\"\r\nconst EmpService =  {\r\n    addEmployee: (empData) => {\r\n        return axios.post(`${BASE_URL}/add-emp`, empData)\r\n            .then(response => response.data)\r\n            .catch(error => {\r\n                console.log(error);\r\n                throw new Error(error);\r\n            });\r\n        },\r\n    getEmployee: async ()=>{\r\n        try {\r\n            const response = await axios.get(`${BASE_URL}get-all-emps`);\r\n            return response.data;\r\n        } catch (error) {\r\n            console.log(error);\r\n            throw new Error(error);\r\n        }\r\n    },\r\n\r\n    getEmpById: async(empById)=>{\r\n        try{\r\n            const response = await axios.get(`${BASE_URL}get-emp-by-id/${empById}`)\r\n            return response.data;\r\n\r\n        }catch(error){\r\n            console.log(error);\r\n            throw new Error(error);\r\n        }\r\n        \r\n\r\n    },\r\n\r\n    getEmpByName: async(empNameToFind)=>{\r\n        try{\r\n            const response = await axios.get(`${BASE_URL}get-emp-by-name/${empNameToFind}`)\r\n            return response.data;\r\n\r\n        }catch(error){\r\n            console.log(error);\r\n            throw new Error(error);\r\n        }\r\n        \r\n\r\n    },\r\n\r\n\r\n\r\n}\r\n \r\nexport default EmpService;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,QAAQ,GAAC,4BAA4B;AAC3C,MAAMC,UAAU,GAAI;EAChBC,WAAW,EAAGC,OAAO,IAAK;IACtB,OAAOJ,KAAK,CAACK,IAAI,CAAE,GAAEJ,QAAS,UAAS,EAAEG,OAAO,CAAC,CAC5CE,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAC/BC,KAAK,CAACC,KAAK,IAAI;MACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MAClB,MAAM,IAAIG,KAAK,CAACH,KAAK,CAAC;IAC1B,CAAC,CAAC;EACN,CAAC;EACLI,WAAW,EAAE,MAAAA,CAAA,KAAU;IACnB,IAAI;MACA,MAAMP,QAAQ,GAAG,MAAMP,KAAK,CAACe,GAAG,CAAE,GAAEd,QAAS,cAAa,CAAC;MAC3D,OAAOM,QAAQ,CAACC,IAAI;IACxB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MAClB,MAAM,IAAIG,KAAK,CAACH,KAAK,CAAC;IAC1B;EACJ,CAAC;EAEDM,UAAU,EAAE,MAAMC,OAAO,IAAG;IACxB,IAAG;MACC,MAAMV,QAAQ,GAAG,MAAMP,KAAK,CAACe,GAAG,CAAE,GAAEd,QAAS,iBAAgBgB,OAAQ,EAAC,CAAC;MACvE,OAAOV,QAAQ,CAACC,IAAI;IAExB,CAAC,QAAME,KAAK,EAAC;MACTC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MAClB,MAAM,IAAIG,KAAK,CAACH,KAAK,CAAC;IAC1B;EAGJ,CAAC;EAEDQ,YAAY,EAAE,MAAMC,aAAa,IAAG;IAChC,IAAG;MACC,MAAMZ,QAAQ,GAAG,MAAMP,KAAK,CAACe,GAAG,CAAE,GAAEd,QAAS,mBAAkBkB,aAAc,EAAC,CAAC;MAC/E,OAAOZ,QAAQ,CAACC,IAAI;IAExB,CAAC,QAAME,KAAK,EAAC;MACTC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MAClB,MAAM,IAAIG,KAAK,CAACH,KAAK,CAAC;IAC1B;EAGJ;AAIJ,CAAC;AAED,eAAeR,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}