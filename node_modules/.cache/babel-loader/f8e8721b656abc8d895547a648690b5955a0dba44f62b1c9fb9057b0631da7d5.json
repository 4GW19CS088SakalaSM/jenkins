{"ast":null,"code":"import axios from \"axios\";\nconst BASE_URL = \"http://localhost:9090/emp/\";\nconst EmpService = {\n  // addEmployee: async (empData) => {\n  //     try {\n  //         const response = await axios.post(`${BASE_URL}/add-emp`, empData);\n  //         return response.data;\n  //     } catch (error) {\n  //         console.log(error);\n  //         throw new Error(error);\n  //     }\n  //     },\n  getEmployee: async () => {\n    try {\n      const response = await axios.get(`${BASE_URL}get-all-emps`);\n      return response.data;\n    } catch (error) {\n      console.log(error);\n      throw new Error(error);\n    }\n  },\n  getEmpById: async empById => {\n    try {\n      const response = await axios.get(`${BASE_URL}get-emp-by-id/${empById}`);\n      return response.data;\n    } catch (error) {\n      console.log(error);\n      throw new Error(error);\n    }\n  },\n  getEmpByName: async empNameToFind => {\n    try {\n      const response = await axios.get(`${BASE_URL}get-emp-by-name/${empNameToFind}`);\n      return response.data;\n    } catch (error) {\n      console.log(error);\n      throw new Error(error);\n    }\n  }\n};\nexport default EmpService;","map":{"version":3,"names":["axios","BASE_URL","EmpService","getEmployee","response","get","data","error","console","log","Error","getEmpById","empById","getEmpByName","empNameToFind"],"sources":["C:/Sakala/ibm-final-demos-may-2024/03-ibm-frontend-react/src/services/EmpService.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst BASE_URL=\"http://localhost:9090/emp/\"\r\nconst EmpService =  {\r\n    // addEmployee: async (empData) => {\r\n    //     try {\r\n    //         const response = await axios.post(`${BASE_URL}/add-emp`, empData);\r\n    //         return response.data;\r\n    //     } catch (error) {\r\n    //         console.log(error);\r\n    //         throw new Error(error);\r\n    //     }\r\n    //     },\r\n    getEmployee: async ()=>{\r\n        try {\r\n            const response = await axios.get(`${BASE_URL}get-all-emps`);\r\n            return response.data;\r\n        } catch (error) {\r\n            console.log(error);\r\n            throw new Error(error);\r\n        }\r\n    },\r\n\r\n    getEmpById: async(empById)=>{\r\n        try{\r\n            const response = await axios.get(`${BASE_URL}get-emp-by-id/${empById}`)\r\n            return response.data;\r\n\r\n        }catch(error){\r\n            console.log(error);\r\n            throw new Error(error);\r\n        }\r\n        \r\n\r\n    },\r\n\r\n    getEmpByName: async(empNameToFind)=>{\r\n        try{\r\n            const response = await axios.get(`${BASE_URL}get-emp-by-name/${empNameToFind}`)\r\n            return response.data;\r\n\r\n        }catch(error){\r\n            console.log(error);\r\n            throw new Error(error);\r\n        }\r\n        \r\n\r\n    },\r\n\r\n\r\n\r\n}\r\n \r\nexport default EmpService;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,QAAQ,GAAC,4BAA4B;AAC3C,MAAMC,UAAU,GAAI;EAChB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,WAAW,EAAE,MAAAA,CAAA,KAAU;IACnB,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAE,GAAEJ,QAAS,cAAa,CAAC;MAC3D,OAAOG,QAAQ,CAACE,IAAI;IACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MAClB,MAAM,IAAIG,KAAK,CAACH,KAAK,CAAC;IAC1B;EACJ,CAAC;EAEDI,UAAU,EAAE,MAAMC,OAAO,IAAG;IACxB,IAAG;MACC,MAAMR,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAE,GAAEJ,QAAS,iBAAgBW,OAAQ,EAAC,CAAC;MACvE,OAAOR,QAAQ,CAACE,IAAI;IAExB,CAAC,QAAMC,KAAK,EAAC;MACTC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MAClB,MAAM,IAAIG,KAAK,CAACH,KAAK,CAAC;IAC1B;EAGJ,CAAC;EAEDM,YAAY,EAAE,MAAMC,aAAa,IAAG;IAChC,IAAG;MACC,MAAMV,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAE,GAAEJ,QAAS,mBAAkBa,aAAc,EAAC,CAAC;MAC/E,OAAOV,QAAQ,CAACE,IAAI;IAExB,CAAC,QAAMC,KAAK,EAAC;MACTC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MAClB,MAAM,IAAIG,KAAK,CAACH,KAAK,CAAC;IAC1B;EAGJ;AAIJ,CAAC;AAED,eAAeL,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}